#!/usr/bin/env coffee
logger = require 'torch'
optimist = require 'optimist'
_ = require 'lodash'

core = require '..'


options =
  # Should correspond to an installed NPM module named 'axiom-<moduleName>'
  'm':
    alias: ['axiom.moduleName']
    demand: true
  's':
    alias: ['axiom.serviceName']
    demand: true
  # Any remaining named args will be pushed through as service arguments


main = ->
  # Extract the arguments we expect, and remaining args for the service.
  parsed = optimist.options options
  {axiom, data} = parsed.argv
  {moduleName, serviceName} = axiom
  toOmit = [
    # Special optimist properties
    '_', '$0'
    # Axiom config arguments and shorthands
    'axiom', 'm', 's'
  ]
  args = _.omit parsed.argv, toOmit

  # Initialize Axiom, load the module.
  config = process.env['axiom.config'] or {}
  modules = []
  modules.push moduleName

  core.init config, modules

  channel = [moduleName, serviceName].join('.')
  core.request channel, args, (err, results) ->
    if err
      logger.red err.stack
    else
      logger.green results


if module is require.main
  if process.env['axiom.env'] is 'testing'
    mockery = require 'mockery'
    mockery.enable
      warnOnReplace: false,
      warnOnUnregistered: false

    mockery.registerMock 'axiom-base',
      services:
        echo: (args, next) ->
          next null, args

  main()


module.exports = main
